---
networks:
  easyiot:


services:

  frontend_broker:
    build:
      context: ../Services/easyiot_broker_service
      dockerfile: Dockerfile
    image: frontend_broker
    container_name: frontend_brokerc
    hostname: frontend_broker
    restart: unless-stopped
    tty: true
    networks:
      - easyiot

  backend_broker:
    build:
      context: ../Services/easyiot_broker_service
      dockerfile: Dockerfile
    image: backend_broker
    container_name: backend_brokerc
    hostname: backend_broker
    restart: unless-stopped
    tty: true
    networks:
      - easyiot

  frontend_gateway:
    build:
      context: ../Services/easyiot_gateway_service
      dockerfile: Dockerfile
    image: frontend_gateway
    container_name: frontend_gatec
    hostname: frontend_gate
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
    depends_on: 
      - home
      - auth_ui
    networks:
      - easyiot
        
  backend_gateway:
    build:
      context: ../Services/easyiot_gateway_service
      dockerfile: Dockerfile
    image: gateway
    container_name: gatec
    hostname: gate
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
    depends_on: 
      - home
      - auth_ui
    networks:
      - easyiot

  home:
    build:
      context: ../Services/easyiot_home_service
      dockerfile: Dockerfile
    image: home
    container_name: homec
    hostname: home
    restart: unless-stopped
    tty: true
    volumes:
      - type: bind
        source: "../Services/easyiot_home_service/src"
        target: /app
    networks:
      - easyiot

  auth_ui:
    build:
      context: ../Services/easyiot_auth_ui_service
      dockerfile: Dockerfile
    image: auth_ui
    container_name: auth_uic
    hostname: auth_ui
    restart: unless-stopped
    tty: true
    volumes:
      - type: bind
        source: "../Services/easyiot_auth_ui_service/src"
        target: /app 
    networks:
      - easyiot

  auth_api:
    build:
      context: ../Services/easyiot_auth_api_service
      dockerfile: Dockerfile
    image: auth_api
    container_name: auth_apic
    hostname: auth_api
    restart: unless-stopped
    tty: true
    volumes:
      - type: bind
        source: "../Services/easyiot_auth_api_service/src"
        target: /app  
    networks:
      - easyiot

